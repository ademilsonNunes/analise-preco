import streamlit as st
from data.loader import carregar_dados
from layout.filters import FiltroDinamico
from views import (
    resumo_executivo,
    analise_produto,
    analise_cliente,
    analise_rede,
    analise_vendedor,
    analise_verba,
    analise_bonificacoes,
    analise_contratos,
    positivacao_clientes,
    analise_devolucoes,
    analise_disparidade_precos
)

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Dashboard - Gest√£o Comercial", layout="wide")

# Estilo CSS
with open("app/assets/style.css") as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# T√≠tulo principal
st.title("üìä Dashboard - Gest√£o Comercial")
st.markdown("Acompanhe a performance mensal por cliente, produto, rede, vendedor e supervisor.")

# Menu lateral
st.sidebar.title("üìå Navega√ß√£o")
pagina = st.sidebar.selectbox("Selecione a P√°gina", [
    "Resumo Executivo",
    "An√°lise por Produto",
    "An√°lise por Cliente",
    "An√°lise por Rede",
    "An√°lise por Vendedor",
    "An√°lise de Devolu√ß√µes",
    "An√°lise de Contratos",
    "An√°lise de Verbas",
    "An√°lise de Bonifica√ß√µes",
    "An√°lise de Disparidade de Pre√ßos",
    "Positiva√ß√£o de Clientes"
])

# Carregar dados
try:
    df = carregar_dados()
except Exception as e:
    st.error(f"‚ö†Ô∏è Erro ao carregar dados: {str(e)}")
    st.stop()

# Inicializa√ß√£o de filtros na sess√£o
if "filtros" not in st.session_state:
    st.session_state["filtros"] = {
        "SUPERVISOR": "Todos",
        "REDE": "Todos",
        "VENDEDOR": "Todos",
        "CLIENTE": "Todos",
        "DESC": "Todos",
        "COD.PRD": "Todos",
        "NATUREZA": "Todos"
    }

# Bot√£o para resetar filtros
if st.sidebar.button("üóëÔ∏è Limpar Filtros", key="limpar_filtros_btn"):
    st.session_state["filtros"] = {
        "SUPERVISOR": "Todos",
        "REDE": "Todos",
        "VENDEDOR": "Todos",
        "CLIENTE": "Todos",
        "DESC": "Todos",
        "COD.PRD": "Todos",
        "NATUREZA": "Todos"
    }

# Exibir filtros e atualizar session_state
filtro_dinamico = FiltroDinamico(df)
filtros = filtro_dinamico.exibir_filtros()
st.session_state["filtros"] = filtros

# Roteamento das p√°ginas
if pagina == "Resumo Executivo":
    dashboard = resumo_executivo.Dashboard(df)
    dashboard.run()
elif pagina == "An√°lise por Produto":
    analise_produto.run(df)
elif pagina == "An√°lise por Cliente":
    analise_cliente.run(df)
elif pagina == "An√°lise por Rede":
    analise_rede.run(df)
elif pagina == "An√°lise por Vendedor":
    analise_vendedor.run(df)
elif pagina == "Positiva√ß√£o de Clientes":
    positivacao_clientes.run(df)
elif pagina == "An√°lise de Bonifica√ß√µes":
    analise_bonificacoes.run(df)
elif pagina == "An√°lise de Devolu√ß√µes":
    analise_devolucoes.run(df)
elif pagina == "An√°lise de Verbas":
    analise_verba.run(df)
elif pagina == "An√°lise de Contratos":
    analise_contratos.run(df)
elif pagina == "An√°lise de Disparidade de Pre√ßos":
    analise_disparidade_precos.run(df)
